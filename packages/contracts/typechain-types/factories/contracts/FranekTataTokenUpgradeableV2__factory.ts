/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  FranekTataTokenUpgradeableV2,
  FranekTataTokenUpgradeableV2Interface,
} from "../../contracts/FranekTataTokenUpgradeableV2";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "burnRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_burnRate",
        type: "uint256",
      },
    ],
    name: "setBurnRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405230608052348015610013575f5ffd5b5061001c610021565b6100d3565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff16156100715760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100d05780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b6080516115b26100f95f395f818161096b015281816109940152610ad301526115b25ff3fe608060405260043610610110575f3560e01c806370a082311161009d578063ad3cb1cc11610062578063ad3cb1cc14610318578063bed9985014610348578063c4d66de81461035c578063dd62ed3e1461037b578063f2fde38b1461039a575f5ffd5b806370a082311461024b578063715018a61461028b5780638da5cb5b1461029f57806395d89b41146102e5578063a9059cbb146102f9575f5ffd5b806323b872dd116100e357806323b872dd146101cb578063313ce567146101ea57806340c10f19146102055780634f1ef2861461022457806352d1902d14610237575f5ffd5b806306fdde0314610114578063095ea7b31461013e57806318160ddd1461016d578063189d165e146101aa575b5f5ffd5b34801561011f575f5ffd5b506101286103b9565b604051610135919061108c565b60405180910390f35b348015610149575f5ffd5b5061015d6101583660046110dc565b610479565b6040519015158152602001610135565b348015610178575f5ffd5b507f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02545b604051908152602001610135565b3480156101b5575f5ffd5b506101c96101c4366004611104565b610492565b005b3480156101d6575f5ffd5b5061015d6101e536600461111b565b6104f5565b3480156101f5575f5ffd5b5060405160128152602001610135565b348015610210575f5ffd5b506101c961021f3660046110dc565b61051a565b6101c9610232366004611169565b610530565b348015610242575f5ffd5b5061019c61054b565b348015610256575f5ffd5b5061019c61026536600461122d565b6001600160a01b03165f9081525f51602061153d5f395f51905f52602052604090205490565b348015610296575f5ffd5b506101c9610566565b3480156102aa575f5ffd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546040516001600160a01b039091168152602001610135565b3480156102f0575f5ffd5b50610128610579565b348015610304575f5ffd5b5061015d6103133660046110dc565b6105b7565b348015610323575f5ffd5b50610128604051806040016040528060058152602001640352e302e360dc1b81525081565b348015610353575f5ffd5b5061019c5f5481565b348015610367575f5ffd5b506101c961037636600461122d565b610605565b348015610386575f5ffd5b5061019c610395366004611246565b610778565b3480156103a5575f5ffd5b506101c96103b436600461122d565b6107c1565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0380546060915f51602061153d5f395f51905f52916103f790611277565b80601f016020809104026020016040519081016040528092919081815260200182805461042390611277565b801561046e5780601f106104455761010080835404028352916020019161046e565b820191905f5260205f20905b81548152906001019060200180831161045157829003601f168201915b505050505091505090565b5f336104868185856107fe565b60019150505b92915050565b61049a610810565b6103e88111156104f15760405162461bcd60e51b815260206004820152601b60248201527f4275726e20726174652063616e6e6f742065786365656420313025000000000060448201526064015b60405180910390fd5b5f55565b5f3361050285828561086b565b61050d8585856108cf565b60019150505b9392505050565b610522610810565b61052c828261092c565b5050565b610538610960565b61054182610a04565b61052c8282610a0c565b5f610554610ac8565b505f51602061155d5f395f51905f5290565b61056e610810565b6105775f610b11565b565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0480546060915f51602061153d5f395f51905f52916103f790611277565b5f5f6127105f54846105c991906112c3565b6105d391906112da565b90505f6105e082856112f9565b905081156105f2576105f23383610b81565b6105fc8582610bb5565b95945050505050565b5f61060e610bc2565b805490915060ff600160401b820416159067ffffffffffffffff165f811580156106355750825b90505f8267ffffffffffffffff1660011480156106515750303b155b90508115801561065f575080155b1561067d5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156106a757845460ff60401b1916600160401b1785555b6106f36040518060400160405280600f81526020016e233930b732b5aa30ba30aa37b5b2b760891b8152506040518060400160405280600381526020016211951560ea1b815250610bea565b6106fc86610bfc565b610704610c0d565b610726866107146012600a6113ef565b61072190620f42406112c3565b61092c565b60645f55831561077057845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b6001600160a01b039182165f9081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020908152604080832093909416825291909152205490565b6107c9610810565b6001600160a01b0381166107f257604051631e4fbdf760e01b81525f60048201526024016104e8565b6107fb81610b11565b50565b61080b8383836001610c15565b505050565b336108427f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146105775760405163118cdaa760e01b81523360048201526024016104e8565b5f6108768484610778565b90505f198110156108c957818110156108bb57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016104e8565b6108c984848484035f610c15565b50505050565b6001600160a01b0383166108f857604051634b637e8f60e11b81525f60048201526024016104e8565b6001600160a01b0382166109215760405163ec442f0560e01b81525f60048201526024016104e8565b61080b838383610cf9565b6001600160a01b0382166109555760405163ec442f0560e01b81525f60048201526024016104e8565b61052c5f8383610cf9565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806109e657507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166109da5f51602061155d5f395f51905f52546001600160a01b031690565b6001600160a01b031614155b156105775760405163703e46dd60e11b815260040160405180910390fd5b6107fb610810565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610a66575060408051601f3d908101601f19168201909252610a63918101906113fd565b60015b610a8e57604051634c9c8ce360e01b81526001600160a01b03831660048201526024016104e8565b5f51602061155d5f395f51905f528114610abe57604051632a87526960e21b8152600481018290526024016104e8565b61080b8383610e32565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105775760405163703e46dd60e11b815260040160405180910390fd5b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b6001600160a01b038216610baa57604051634b637e8f60e11b81525f60048201526024016104e8565b61052c825f83610cf9565b5f336104868185856108cf565b5f807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0061048c565b610bf2610e87565b61052c8282610eac565b610c04610e87565b6107fb81610efc565b610577610e87565b5f51602061153d5f395f51905f526001600160a01b038516610c4c5760405163e602df0560e01b81525f60048201526024016104e8565b6001600160a01b038416610c7557604051634a1406b160e11b81525f60048201526024016104e8565b6001600160a01b038086165f90815260018301602090815260408083209388168352929052208390558115610cf257836001600160a01b0316856001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92585604051610ce991815260200190565b60405180910390a35b5050505050565b5f51602061153d5f395f51905f526001600160a01b038416610d335781816002015f828254610d289190611414565b90915550610da39050565b6001600160a01b0384165f9081526020829052604090205482811015610d855760405163391434e360e21b81526001600160a01b038616600482015260248101829052604481018490526064016104e8565b6001600160a01b0385165f9081526020839052604090209083900390555b6001600160a01b038316610dc1576002810180548390039055610ddf565b6001600160a01b0383165f9081526020829052604090208054830190555b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e2491815260200190565b60405180910390a350505050565b610e3b82610f04565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a2805115610e7f5761080b8282610f67565b61052c610fd0565b610e8f610fef565b61057757604051631afcd79f60e31b815260040160405180910390fd5b610eb4610e87565b5f51602061153d5f395f51905f527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03610eed848261146b565b50600481016108c9838261146b565b6107c9610e87565b806001600160a01b03163b5f03610f3957604051634c9c8ce360e01b81526001600160a01b03821660048201526024016104e8565b5f51602061155d5f395f51905f5280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f5f846001600160a01b031684604051610f839190611526565b5f60405180830381855af49150503d805f8114610fbb576040519150601f19603f3d011682016040523d82523d5f602084013e610fc0565b606091505b50915091506105fc858383611008565b34156105775760405163b398979f60e01b815260040160405180910390fd5b5f610ff8610bc2565b54600160401b900460ff16919050565b60608261101d5761101882611064565b610513565b815115801561103457506001600160a01b0384163b155b1561105d57604051639996b31560e01b81526001600160a01b03851660048201526024016104e8565b5080610513565b80511561107357805160208201fd5b60405163d6bda27560e01b815260040160405180910390fd5b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146110d7575f5ffd5b919050565b5f5f604083850312156110ed575f5ffd5b6110f6836110c1565b946020939093013593505050565b5f60208284031215611114575f5ffd5b5035919050565b5f5f5f6060848603121561112d575f5ffd5b611136846110c1565b9250611144602085016110c1565b929592945050506040919091013590565b634e487b7160e01b5f52604160045260245ffd5b5f5f6040838503121561117a575f5ffd5b611183836110c1565b9150602083013567ffffffffffffffff81111561119e575f5ffd5b8301601f810185136111ae575f5ffd5b803567ffffffffffffffff8111156111c8576111c8611155565b604051601f8201601f19908116603f0116810167ffffffffffffffff811182821017156111f7576111f7611155565b60405281815282820160200187101561120e575f5ffd5b816020840160208301375f602083830101528093505050509250929050565b5f6020828403121561123d575f5ffd5b610513826110c1565b5f5f60408385031215611257575f5ffd5b611260836110c1565b915061126e602084016110c1565b90509250929050565b600181811c9082168061128b57607f821691505b6020821081036112a957634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b808202811582820484141761048c5761048c6112af565b5f826112f457634e487b7160e01b5f52601260045260245ffd5b500490565b8181038181111561048c5761048c6112af565b6001815b60018411156113475780850481111561132b5761132b6112af565b600184161561133957908102905b60019390931c928002611310565b935093915050565b5f8261135d5750600161048c565b8161136957505f61048c565b816001811461137f5760028114611389576113a5565b600191505061048c565b60ff84111561139a5761139a6112af565b50506001821b61048c565b5060208310610133831016604e8410600b84101617156113c8575081810a61048c565b6113d45f19848461130c565b805f19048211156113e7576113e76112af565b029392505050565b5f61051360ff84168361134f565b5f6020828403121561140d575f5ffd5b5051919050565b8082018082111561048c5761048c6112af565b601f82111561080b57805f5260205f20601f840160051c8101602085101561144c5750805b601f840160051c820191505b81811015610cf2575f8155600101611458565b815167ffffffffffffffff81111561148557611485611155565b611499816114938454611277565b84611427565b6020601f8211600181146114cb575f83156114b45750848201515b5f19600385901b1c1916600184901b178455610cf2565b5f84815260208120601f198516915b828110156114fa57878501518255602094850194600190920191016114da565b508482101561151757868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b5f82518060208501845e5f92019182525091905056fe52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220e345e0528c123e93c75f239974ee0e71c1df73a48f1514fc624d4d1b9414963d64736f6c634300081c0033";

type FranekTataTokenUpgradeableV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FranekTataTokenUpgradeableV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FranekTataTokenUpgradeableV2__factory extends ContractFactory {
  constructor(...args: FranekTataTokenUpgradeableV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      FranekTataTokenUpgradeableV2 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): FranekTataTokenUpgradeableV2__factory {
    return super.connect(runner) as FranekTataTokenUpgradeableV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FranekTataTokenUpgradeableV2Interface {
    return new Interface(_abi) as FranekTataTokenUpgradeableV2Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): FranekTataTokenUpgradeableV2 {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as FranekTataTokenUpgradeableV2;
  }
}
