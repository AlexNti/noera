/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  FranekTataTokenUpgradeable,
  FranekTataTokenUpgradeableInterface,
} from "../../contracts/FranekTataTokenUpgradeable";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405230608052348015610013575f5ffd5b5061001c610021565b6100d3565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff16156100715760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100d05780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b6080516114456100f95f395f818161087f015281816108a801526109e701526114455ff3fe6080604052600436106100fa575f3560e01c806370a0823111610092578063a9059cbb11610062578063a9059cbb146102c4578063ad3cb1cc146102e3578063c4d66de814610313578063dd62ed3e14610332578063f2fde38b14610351575f5ffd5b806370a0823114610216578063715018a6146102565780638da5cb5b1461026a57806395d89b41146102b0575f5ffd5b8063313ce567116100cd578063313ce567146101b357806340c10f19146101ce5780634f1ef286146101ef57806352d1902d14610202575f5ffd5b806306fdde03146100fe578063095ea7b31461012857806318160ddd1461015757806323b872dd14610194575b5f5ffd5b348015610109575f5ffd5b50610112610370565b60405161011f9190610f68565b60405180910390f35b348015610133575f5ffd5b50610147610142366004610fb8565b610430565b604051901515815260200161011f565b348015610162575f5ffd5b507f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02545b60405190815260200161011f565b34801561019f575f5ffd5b506101476101ae366004610fe0565b610449565b3480156101be575f5ffd5b506040516012815260200161011f565b3480156101d9575f5ffd5b506101ed6101e8366004610fb8565b61046e565b005b6101ed6101fd36600461102e565b610484565b34801561020d575f5ffd5b5061018661049f565b348015610221575f5ffd5b506101866102303660046110f2565b6001600160a01b03165f9081525f5160206113d05f395f51905f52602052604090205490565b348015610261575f5ffd5b506101ed6104ba565b348015610275575f5ffd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546040516001600160a01b03909116815260200161011f565b3480156102bb575f5ffd5b506101126104cd565b3480156102cf575f5ffd5b506101476102de366004610fb8565b61050b565b3480156102ee575f5ffd5b50610112604051806040016040528060058152602001640352e302e360dc1b81525081565b34801561031e575f5ffd5b506101ed61032d3660046110f2565b610518565b34801561033d575f5ffd5b5061018661034c36600461110b565b610687565b34801561035c575f5ffd5b506101ed61036b3660046110f2565b6106d0565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0380546060915f5160206113d05f395f51905f52916103ae9061113c565b80601f01602080910402602001604051908101604052809291908181526020018280546103da9061113c565b80156104255780601f106103fc57610100808354040283529160200191610425565b820191905f5260205f20905b81548152906001019060200180831161040857829003601f168201915b505050505091505090565b5f3361043d818585610712565b60019150505b92915050565b5f33610456858285610724565b610461858585610788565b60019150505b9392505050565b6104766107e5565b6104808282610840565b5050565b61048c610874565b61049582610918565b6104808282610920565b5f6104a86109dc565b505f5160206113f05f395f51905f5290565b6104c26107e5565b6104cb5f610a25565b565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0480546060915f5160206113d05f395f51905f52916103ae9061113c565b5f3361043d818585610788565b5f610521610a95565b805490915060ff600160401b820416159067ffffffffffffffff165f811580156105485750825b90505f8267ffffffffffffffff1660011480156105645750303b155b905081158015610572575080155b156105905760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156105ba57845460ff60401b1916600160401b1785555b6106066040518060400160405280600f81526020016e233930b732b5aa30ba30aa37b5b2b760891b8152506040518060400160405280600381526020016211951560ea1b815250610abd565b61060f86610acf565b610617610ae0565b610639866106276012600a61126b565b61063490620f4240611279565b610840565b831561067f57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b6001600160a01b039182165f9081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020908152604080832093909416825291909152205490565b6106d86107e5565b6001600160a01b03811661070657604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61070f81610a25565b50565b61071f8383836001610ae8565b505050565b5f61072f8484610687565b90505f19811015610782578181101561077457604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016106fd565b61078284848484035f610ae8565b50505050565b6001600160a01b0383166107b157604051634b637e8f60e11b81525f60048201526024016106fd565b6001600160a01b0382166107da5760405163ec442f0560e01b81525f60048201526024016106fd565b61071f838383610bcc565b336108177f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146104cb5760405163118cdaa760e01b81523360048201526024016106fd565b6001600160a01b0382166108695760405163ec442f0560e01b81525f60048201526024016106fd565b6104805f8383610bcc565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806108fa57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166108ee5f5160206113f05f395f51905f52546001600160a01b031690565b6001600160a01b031614155b156104cb5760405163703e46dd60e11b815260040160405180910390fd5b61070f6107e5565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561097a575060408051601f3d908101601f1916820190925261097791810190611290565b60015b6109a257604051634c9c8ce360e01b81526001600160a01b03831660048201526024016106fd565b5f5160206113f05f395f51905f5281146109d257604051632a87526960e21b8152600481018290526024016106fd565b61071f8383610d05565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104cb5760405163703e46dd60e11b815260040160405180910390fd5b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b5f807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00610443565b610ac5610d5a565b6104808282610d7f565b610ad7610d5a565b61070f81610dcf565b6104cb610d5a565b5f5160206113d05f395f51905f526001600160a01b038516610b1f5760405163e602df0560e01b81525f60048201526024016106fd565b6001600160a01b038416610b4857604051634a1406b160e11b81525f60048201526024016106fd565b6001600160a01b038086165f90815260018301602090815260408083209388168352929052208390558115610bc557836001600160a01b0316856001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92585604051610bbc91815260200190565b60405180910390a35b5050505050565b5f5160206113d05f395f51905f526001600160a01b038416610c065781816002015f828254610bfb91906112a7565b90915550610c769050565b6001600160a01b0384165f9081526020829052604090205482811015610c585760405163391434e360e21b81526001600160a01b038616600482015260248101829052604481018490526064016106fd565b6001600160a01b0385165f9081526020839052604090209083900390555b6001600160a01b038316610c94576002810180548390039055610cb2565b6001600160a01b0383165f9081526020829052604090208054830190555b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610cf791815260200190565b60405180910390a350505050565b610d0e82610dd7565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a2805115610d525761071f8282610e3a565b610480610eac565b610d62610ecb565b6104cb57604051631afcd79f60e31b815260040160405180910390fd5b610d87610d5a565b5f5160206113d05f395f51905f527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03610dc084826112fe565b506004810161078283826112fe565b6106d8610d5a565b806001600160a01b03163b5f03610e0c57604051634c9c8ce360e01b81526001600160a01b03821660048201526024016106fd565b5f5160206113f05f395f51905f5280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f5f846001600160a01b031684604051610e5691906113b9565b5f60405180830381855af49150503d805f8114610e8e576040519150601f19603f3d011682016040523d82523d5f602084013e610e93565b606091505b5091509150610ea3858383610ee4565b95945050505050565b34156104cb5760405163b398979f60e01b815260040160405180910390fd5b5f610ed4610a95565b54600160401b900460ff16919050565b606082610ef957610ef482610f40565b610467565b8151158015610f1057506001600160a01b0384163b155b15610f3957604051639996b31560e01b81526001600160a01b03851660048201526024016106fd565b5080610467565b805115610f4f57805160208201fd5b60405163d6bda27560e01b815260040160405180910390fd5b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114610fb3575f5ffd5b919050565b5f5f60408385031215610fc9575f5ffd5b610fd283610f9d565b946020939093013593505050565b5f5f5f60608486031215610ff2575f5ffd5b610ffb84610f9d565b925061100960208501610f9d565b929592945050506040919091013590565b634e487b7160e01b5f52604160045260245ffd5b5f5f6040838503121561103f575f5ffd5b61104883610f9d565b9150602083013567ffffffffffffffff811115611063575f5ffd5b8301601f81018513611073575f5ffd5b803567ffffffffffffffff81111561108d5761108d61101a565b604051601f8201601f19908116603f0116810167ffffffffffffffff811182821017156110bc576110bc61101a565b6040528181528282016020018710156110d3575f5ffd5b816020840160208301375f602083830101528093505050509250929050565b5f60208284031215611102575f5ffd5b61046782610f9d565b5f5f6040838503121561111c575f5ffd5b61112583610f9d565b915061113360208401610f9d565b90509250929050565b600181811c9082168061115057607f821691505b60208210810361116e57634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b6001815b60018411156111c3578085048111156111a7576111a7611174565b60018416156111b557908102905b60019390931c92800261118c565b935093915050565b5f826111d957506001610443565b816111e557505f610443565b81600181146111fb576002811461120557611221565b6001915050610443565b60ff84111561121657611216611174565b50506001821b610443565b5060208310610133831016604e8410600b8410161715611244575081810a610443565b6112505f198484611188565b805f190482111561126357611263611174565b029392505050565b5f61046760ff8416836111cb565b808202811582820484141761044357610443611174565b5f602082840312156112a0575f5ffd5b5051919050565b8082018082111561044357610443611174565b601f82111561071f57805f5260205f20601f840160051c810160208510156112df5750805b601f840160051c820191505b81811015610bc5575f81556001016112eb565b815167ffffffffffffffff8111156113185761131861101a565b61132c81611326845461113c565b846112ba565b6020601f82116001811461135e575f83156113475750848201515b5f19600385901b1c1916600184901b178455610bc5565b5f84815260208120601f198516915b8281101561138d578785015182556020948501946001909201910161136d565b50848210156113aa57868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b5f82518060208501845e5f92019182525091905056fe52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220ff6f7a6a20c11fa6eb2f7a88b6f4d7311417bc7c3f61113ace3de724e54e014664736f6c634300081c0033";

type FranekTataTokenUpgradeableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FranekTataTokenUpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FranekTataTokenUpgradeable__factory extends ContractFactory {
  constructor(...args: FranekTataTokenUpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      FranekTataTokenUpgradeable & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): FranekTataTokenUpgradeable__factory {
    return super.connect(runner) as FranekTataTokenUpgradeable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FranekTataTokenUpgradeableInterface {
    return new Interface(_abi) as FranekTataTokenUpgradeableInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): FranekTataTokenUpgradeable {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as FranekTataTokenUpgradeable;
  }
}
